// <auto-generated />
using System;
using LapShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LapShop.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20250507121838_fix_item_CreatedBy")]
    partial class fix_item_CreatedBy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LapShop.Data.Models.BusinessInfo", b =>
                {
                    b.Property<int>("BusinessInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessInfoId"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("BusinessCardNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("OfficePhone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BusinessInfoId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BusinessInfo");
                });

            modelBuilder.Entity("LapShop.Data.Models.CashTransaction", b =>
                {
                    b.Property<int>("CashTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashTransactionId"));

                    b.Property<DateTime>("CashDate")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("CashValue")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CashTransactionId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CashTransactions");
                });

            modelBuilder.Entity("LapShop.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ShowInHomePage")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LapShop.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LapShop.Data.Models.CustomerxItem", b =>
                {
                    b.Property<int>("CustomerxItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerxItemId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("CustomerxItemId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomerxItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.DeliveryMan", b =>
                {
                    b.Property<int>("DeliveryManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryManId"));

                    b.Property<string>("DeliveryManName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DeliveryManId");

                    b.ToTable("DeliveryMen");
                });

            modelBuilder.Entity("LapShop.Data.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CurrentState")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gpu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HardDisk")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OperatingSystemId")
                        .HasColumnType("int");

                    b.Property<string>("Processor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("RamSize")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("ScreenResolution")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ScreenSize")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedBy")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Weight")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("OperatingSystemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemDiscount", b =>
                {
                    b.Property<int>("ItemDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemDiscountId"));

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("ItemDiscountId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemDiscounts");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemImage", b =>
                {
                    b.Property<int>("ItemImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemImageId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ItemImageId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemImages");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemType", b =>
                {
                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemTypeId");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("LapShop.Data.Models.OperatingSystem", b =>
                {
                    b.Property<int>("OperatingSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatingSystemId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OperatingSystemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ShowInHomePage")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OperatingSystemId");

                    b.ToTable("OperatingSystems");
                });

            modelBuilder.Entity("LapShop.Data.Models.PurchaseInvoice", b =>
                {
                    b.Property<int>("PurchaseInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseInvoiceId"));

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseInvoiceId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseInvoices");
                });

            modelBuilder.Entity("LapShop.Data.Models.PurchaseInvoicexItem", b =>
                {
                    b.Property<int>("PurchaseInvoicexItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseInvoicexItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseInvoicexItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseInvoiceId");

                    b.ToTable("PurchaseInvoicexItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.SalesInvoice", b =>
                {
                    b.Property<int>("SalesInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvoiceId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("DateTime");

                    b.Property<int?>("DeliveryManId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SalesInvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryManId");

                    b.ToTable("SalesInvoices");
                });

            modelBuilder.Entity("LapShop.Data.Models.SalesInvoicexItem", b =>
                {
                    b.Property<int>("SalesInvoicexItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvoicexItemId"));

                    b.Property<decimal>("InvoicePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("SalesInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("SalesInvoicexItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SalesInvoiceId");

                    b.ToTable("SalesInvoicexItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.Slider", b =>
                {
                    b.Property<int>("SliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SliderId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SliderId");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("LapShop.Data.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("LapShop.Data.Models.BusinessInfo", b =>
                {
                    b.HasOne("LapShop.Data.Models.Customer", "Customer")
                        .WithMany("BusinessInfo")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LapShop.Data.Models.CashTransaction", b =>
                {
                    b.HasOne("LapShop.Data.Models.Customer", "Customer")
                        .WithMany("CashTransactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LapShop.Data.Models.CustomerxItem", b =>
                {
                    b.HasOne("LapShop.Data.Models.Customer", "Customer")
                        .WithMany("CustomerxItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LapShop.Data.Models.Item", "Item")
                        .WithMany("CustomerxItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LapShop.Data.Models.Item", b =>
                {
                    b.HasOne("LapShop.Data.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LapShop.Data.Models.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("LapShop.Data.Models.OperatingSystem", "OperatingSystem")
                        .WithMany("Items")
                        .HasForeignKey("OperatingSystemId");

                    b.Navigation("Category");

                    b.Navigation("ItemType");

                    b.Navigation("OperatingSystem");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemDiscount", b =>
                {
                    b.HasOne("LapShop.Data.Models.Item", "Item")
                        .WithMany("ItemDiscounts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemImage", b =>
                {
                    b.HasOne("LapShop.Data.Models.Item", "Item")
                        .WithMany("ItemImages")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LapShop.Data.Models.PurchaseInvoice", b =>
                {
                    b.HasOne("LapShop.Data.Models.Supplier", "Supplier")
                        .WithMany("PurchaseInvoices")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("LapShop.Data.Models.PurchaseInvoicexItem", b =>
                {
                    b.HasOne("LapShop.Data.Models.Item", "Item")
                        .WithMany("PurchaseInvoicexItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LapShop.Data.Models.PurchaseInvoice", "PurchaseInvoice")
                        .WithMany("PurchaseInvoicexItems")
                        .HasForeignKey("PurchaseInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseInvoice");
                });

            modelBuilder.Entity("LapShop.Data.Models.SalesInvoice", b =>
                {
                    b.HasOne("LapShop.Data.Models.Customer", "Customer")
                        .WithMany("SalesInvoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LapShop.Data.Models.DeliveryMan", "DeliveryMan")
                        .WithMany("SalesInvoices")
                        .HasForeignKey("DeliveryManId");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryMan");
                });

            modelBuilder.Entity("LapShop.Data.Models.SalesInvoicexItem", b =>
                {
                    b.HasOne("LapShop.Data.Models.Item", "Item")
                        .WithMany("SalesInvoicexItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LapShop.Data.Models.SalesInvoice", "SalesInvoice")
                        .WithMany("SalesInvoicexItems")
                        .HasForeignKey("SalesInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SalesInvoice");
                });

            modelBuilder.Entity("LapShop.Data.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("LapShop.Data.Models.Customer", b =>
                {
                    b.Navigation("BusinessInfo");

                    b.Navigation("CashTransactions");

                    b.Navigation("CustomerxItems");

                    b.Navigation("SalesInvoices");
                });

            modelBuilder.Entity("LapShop.Data.Models.DeliveryMan", b =>
                {
                    b.Navigation("SalesInvoices");
                });

            modelBuilder.Entity("LapShop.Data.Models.Item", b =>
                {
                    b.Navigation("CustomerxItems");

                    b.Navigation("ItemDiscounts");

                    b.Navigation("ItemImages");

                    b.Navigation("PurchaseInvoicexItems");

                    b.Navigation("SalesInvoicexItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("LapShop.Data.Models.OperatingSystem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("LapShop.Data.Models.PurchaseInvoice", b =>
                {
                    b.Navigation("PurchaseInvoicexItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.SalesInvoice", b =>
                {
                    b.Navigation("SalesInvoicexItems");
                });

            modelBuilder.Entity("LapShop.Data.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
